@{
    ViewData["Title"] = "Cookies policy";
    var lastUpdated = "23 Sep 2025";
}
<!-- head -->
<section class="section section--head section--head-fixed" id="top">
    <div class="container">
        <div class="row">
            <div class="col-12 col-xl-6">
                <h1 class="section__title section__title--head">Cookies policy</h1>
                <p class="section__text section__text--small">Last updated: @lastUpdated</p>
            </div>

            <div class="col-12 col-xl-6">
                <ul class="breadcrumb">
                    <li class="breadcrumb__item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="breadcrumb__item breadcrumb__item--active">Cookies policy</li>
                </ul>
            </div>
        </div>

        <!-- in-page tabs -->
        <div class="row mt-3">
            <div class="col-12">
                <ul class="nav nav-tabs cookie__tabs" role="tablist">
                    <li class="nav-item"><a class="nav-link active" href="#sec-overview" role="tab">Overview</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-what" role="tab">What are cookies</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-use" role="tab">Cookies we use</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-headers" role="tab">Diagnostics & headers</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-browser" role="tab">Browser settings</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-changes" role="tab">Changes</a></li>
                    <li class="nav-item"><a class="nav-link" href="#sec-contact" role="tab">Contact</a></li>
                </ul>
            </div>
        </div>
    </div>
</section>
<!-- end head -->

<section class="section section--pb0 section--gradient cookie" id="cookie-root">
    <div class="container">
        <div class="row">

            <!-- Overview -->
            <div class="col-12 js-anchor" id="sec-overview">
                <h2 class="cookie__h">Overview</h2>
                <p class="section__text section__text--small">
                    We use cookies and similar technologies to run FlixTV securely (login, sessions), protect against abuse,
                    and keep the product reliable. This page explains which cookies we set in the current client, based on our implementation.
                </p>
            </div>

            <!-- What are cookies -->
            <div class="col-12 js-anchor" id="sec-what">
                <h2 class="cookie__h">1. What are cookies?</h2>
                <p class="section__text section__text--small">
                    Cookies are small text files stored by your browser. We also use related technologies (e.g. localStorage and headers).
                    In this policy we call them collectively “cookies”, though we clearly label non-cookie storage below.
                </p>
                <ul class="section__text section__text--small cookie__bullets">
                    <li><b>Session cookies</b> – removed when you close the browser.</li>
                    <li><b>Persistent cookies</b> – remain until their expiry time or until you delete them.</li>
                    <li><b>First-party</b> cookies are set by FlixTV; we currently don’t set third-party cookies from analytics/ads by default.</li>
                </ul>
            </div>

            <!-- Cookies we use -->
            <div class="col-12 js-anchor" id="sec-use">
                <h2 class="cookie__h">2. Cookies we use (current implementation)</h2>

                <div class="section__list">
                    <ol>
                        <li><b>Essential</b> – required to sign in, keep your session and secure the site (cannot be switched off).</li>
                        <li><b>Functional</b> – may remember simple UI preferences (if enabled in the UI).</li>
                    </ol>
                </div>

                <div class="main__table-wrap mt-3">
                    <table class="main__table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Provider</th>
                                <th>Duration</th>
                                <th>Purpose / Attributes</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><div class="main__table-text">flix_access_token</div></td>
                                <td><div class="main__table-text">Essential / Auth</div></td>
                                <td><div class="main__table-text">FlixTV</div></td>
                                <td><div class="main__table-text">Until API “Expiration” (short-lived)</div></td>
                                <td>
                                    <div class="main__table-text">
                                        JWT access token used for authenticated API calls (read by <code>AuthHeaderHandler</code>).
                                        Set as <b>HttpOnly</b>, <b>SameSite=Lax</b>, <b>Secure</b> (Secure may be off locally in dev).
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td><div class="main__table-text">flix_refresh_token</div></td>
                                <td><div class="main__table-text">Essential / Auth</div></td>
                                <td><div class="main__table-text">FlixTV</div></td>
                                <td><div class="main__table-text">Until API “Expiration” (longer-lived)</div></td>
                                <td>
                                    <div class="main__table-text">
                                        Refresh token used by <code>RefreshTokenHandler</code> to obtain a new access token.
                                        Set as <b>HttpOnly</b>, <b>SameSite=Lax</b>, <b>Secure</b> (Secure may be off locally in dev).
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td><div class="main__table-text">.AspNetCore.Cookies</div></td>
                                <td><div class="main__table-text">Essential / Auth</div></td>
                                <td><div class="main__table-text">FlixTV (ASP.NET Core)</div></td>
                                <td><div class="main__table-text">Session (unless configured persistent)</div></td>
                                <td>
                                    <div class="main__table-text">
                                        Framework authentication cookie created by the “Cookies” scheme on sign-in. Keeps your web session.
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td><div class="main__table-text">RequestVerificationToken</div></td>
                                <td><div class="main__table-text">Essential / Security</div></td>
                                <td><div class="main__table-text">FlixTV</div></td>
                                <td><div class="main__table-text">Session</div></td>
                                <td>
                                    <div class="main__table-text">
                                        Anti-forgery protection for forms/AJAX when those pages render a CSRF token.
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <p class="section__text section__text--small mt-2">
                    <i>Note:</i> We don’t set third-party analytics/advertising cookies in the code you’ve shared. If such tools are
                    added later (e.g., Google Analytics), this table will be updated accordingly.
                </p>
            </div>

            <!-- Diagnostics & headers (not cookies) -->
            <div class="col-12 js-anchor" id="sec-headers">
                <h2 class="cookie__h">3. Diagnostics & headers (not cookies)</h2>
                <div class="main__table-wrap mt-2">
                    <table class="main__table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Where used</th>
                                <th>Purpose</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><div class="main__table-text">X-Correlation-Id</div></td>
                                <td><div class="main__table-text">HTTP header</div></td>
                                <td><div class="main__table-text">Every API call (<code>CorrelationIdHandler</code>)</div></td>
                                <td><div class="main__table-text">Helps trace a single request across services for diagnostics.</div></td>
                            </tr>
                            <tr>
                                <td><div class="main__table-text">Authorization: Bearer &lt;jwt&gt;</div></td>
                                <td><div class="main__table-text">HTTP header</div></td>
                                <td><div class="main__table-text">API calls (<code>AuthHeaderHandler</code>)</div></td>
                                <td><div class="main__table-text">Sends the access token from cookie storage to the API.</div></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="section__text section__text--small">
                    We may also store lightweight UI state in <b>localStorage</b> (e.g., consent/preferences) when such features are enabled.
                    These are not cookies and can be cleared from your browser storage.
                </p>
            </div>

            <!-- Browser settings -->
            <div class="col-12 js-anchor" id="sec-browser">
                <h2 class="cookie__h">4. Manage cookies in your browser</h2>
                <p class="section__text section__text--small">
                    Most browsers let you block or delete cookies. You can do this in the privacy settings of Chrome, Firefox,
                    Safari, Edge and others. If you block essential cookies, you won’t be able to sign in or keep a session.
                </p>
            </div>

            <!-- Changes -->
            <div class="col-12 js-anchor" id="sec-changes">
                <h2 class="cookie__h">5. Changes to this policy</h2>
                <p class="section__text section__text--small">
                    If we introduce new cookies or vendors, we’ll update this page and, where required, ask for your consent again.
                </p>
            </div>

            <!-- Contact -->
            <div class="col-12 js-anchor" id="sec-contact">
                <h2 class="cookie__h">6. Contact</h2>
                <p class="section__text section__text--small">
                    Questions about cookies? Email <a href="mailto:flixtv.movies.platform@gmail.com">flixtv.movies.platform@gmail.com</a>.
                </p>
                <p class="section__text section__text--small"><a href="#sec-overview" class="js-backtotop">Back to top ↑</a></p>
            </div>

        </div>
    </div>
</section>

@section Scripts {
    <script>
        (function () {
          // ---- fixed header offset ----
          function headerOffset() {
            const h = document.querySelector('header.header');
            return (h?.offsetHeight || 0) + 16; // buffer
          }

          // ---- tabs ----
          const tabs = Array.from(document.querySelectorAll('.cookie__tabs .nav-link'));
          function setActiveById(id) {
            const hash = '#' + id;
            tabs.forEach(a => a.classList.toggle('active', a.getAttribute('href') === hash));
          }

          // ---- smooth scroll helper ----
          function smoothTo(id) {
            const el = document.getElementById(id);
            if (!el) return;
            const y = Math.max(0, el.getBoundingClientRect().top + window.pageYOffset - headerOffset());
            window.scrollTo({ top: y, behavior: 'smooth' });
            history.replaceState(null, '', '#' + id);
          }

          // ---- compute section trigger positions (top - headerOffset) ----
          const anchors = Array.from(document.querySelectorAll('.section.cookie .js-anchor[id]'));
          let sections = [];
          function computeSections() {
            const off = headerOffset();
            sections = anchors.map(el => ({
              id: el.id,
              top: Math.floor(el.getBoundingClientRect().top + window.scrollY - off - 2) // -2px tolerance
            })).sort((a,b) => a.top - b.top);
          }

          // ---- scrollspy (RAF throttled) ----
          let raf = 0;
          function onScroll() {
            if (raf) return;
            raf = requestAnimationFrame(() => {
              raf = 0;
              if (!sections.length) computeSections();
              const pos = window.scrollY;
              let current = sections.length ? sections[0].id : null;
              for (const s of sections) {
                if (pos >= s.top) current = s.id; else break;
              }
              if (current) setActiveById(current);
            });
          }

          // tab clicks → smooth
          tabs.forEach(a => {
            const href = a.getAttribute('href') || '';
            if (!href.startsWith('#')) return;
            a.addEventListener('click', (e) => {
              e.preventDefault();
              const id = href.slice(1);
              smoothTo(id);
            });
          });

          // page "Back to top" on this view → Overview
          document.querySelectorAll('.section.cookie a.js-backtotop').forEach(a => {
            a.addEventListener('click', (e) => { e.preventDefault(); smoothTo('sec-overview'); });
          });

          // init & listeners
          computeSections();
          onScroll(); // set initial active correctly
          window.addEventListener('scroll', onScroll, { passive: true });
          window.addEventListener('resize', () => { computeSections(); onScroll(); });
          // in case fonts/images shift layout:
          window.addEventListener('load', () => { computeSections(); onScroll(); });

          // if opened with a hash, scroll to it respecting header
          if (location.hash) {
            let id = location.hash.slice(1);
            if (id === 'top') id = 'sec-overview';
            setActiveById(id);
            // align under header without animation on initial load
            const el = document.getElementById(id);
            if (el) window.scrollTo(0, Math.max(0, el.getBoundingClientRect().top + window.pageYOffset - headerOffset()));
          } else {
            setActiveById(anchors[0]?.id || 'sec-overview');
          }
        })();
    </script>


    <style>
        /* headings */
        .section.cookie .cookie__h {
            color: #fff;
            font-weight: 700;
            font-size: 1.5rem;
            line-height: 1.4;
            margin: 2rem 0 .75rem;
        }

        @@media (min-width:1200px) {
            .section.cookie .cookie__h {
                font-size: 1.7rem;
            }
        }

        /* text & lists */
        .section.cookie .section__text.section__text--small,
        .section.cookie .section__list, .section.cookie .section__list li {
            color: rgba(255,255,255,.88);
        }

            .section.cookie .section__list ol {
                padding-left: 1.25rem;
            }

            .section.cookie .section__list li {
                margin: .25rem 0;
            }

        .cookie__bullets {
            padding-left: 1.25rem;
        }

            .cookie__bullets li {
                margin: .3rem 0;
            }

        /* tabs */
        .cookie__tabs {
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: .375rem;
            flex-wrap: nowrap;
            overflow-x: auto;
            white-space: nowrap;
            border-bottom: 0;
            padding: .25rem 0;
            scrollbar-width: none;
        }

            .cookie__tabs::-webkit-scrollbar {
                display: none;
            }

            .cookie__tabs .nav-item {
                flex: 0 0 auto;
            }

            .cookie__tabs .nav-link {
                border: 1px solid rgba(255,255,255,.14);
                border-radius: 10px;
                padding: .5rem .75rem;
                font-size: .92rem;
                color: #e6e6e6;
                background: rgba(255,255,255,.05);
                transition: all .15s;
                line-height: 1.2;
            }

                .cookie__tabs .nav-link:hover {
                    background: rgba(255,255,255,.10);
                    color: #fff;
                    text-decoration: none;
                }

                .cookie__tabs .nav-link.active {
                    background: #fff;
                    border-color: #fff;
                    color: #111;
                    font-weight: 600;
                }

        /* anchor offset */
        .section.cookie .js-anchor {
            scroll-margin-top: var(--anchor-offset,96px);
        }

        :target {
            scroll-margin-top: var(--anchor-offset,96px);
        }
    </style>
}
