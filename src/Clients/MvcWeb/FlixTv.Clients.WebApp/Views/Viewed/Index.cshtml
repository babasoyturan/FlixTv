@model ViewedViewModel
@{
    ViewData["Title"] = "Viewed";
}
<section class="section section--head section--head-fixed">
    <div class="container">
        <div class="row">
            <div class="col-12 col-xl-6">
                <h1 class="section__title section__title--head">Viewed</h1>
            </div>
        </div>
    </div>
</section>

<div class="catalog catalog--page">
    <div class="container">
        <div id="myViewDatasContainer" data-page-size="@Model.PageSize">
            @await Html.PartialAsync("_MyViewDatasTable", new MyViewDatasTablePartialViewModel {
            ViewDatas = Model.ViewDatas,
                        TotalCount = Model.TotalCount,
                        Page = Model.Page,
                        PageSize = Model.PageSize
                        })
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Anti-forgery header (Layout-da token varsa)
        $.ajaxSetup({
          headers: {
            'X-Requested-With': 'XMLHttpRequest',
            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
          }
        });

        function scrollToBlockTop($wrap){
          var headerH = $('header.header').outerHeight() || 0;
          var top = Math.max(0, $wrap.offset().top - headerH*2);
          $('html, body').stop(true).animate({ scrollTop: top }, 350, 'swing');
        }

        // VIEWDATAS PAGING
        $(document).off('click', '.js-myviewdatas-pager a')
                   .on('click', '.js-myviewdatas-pager a', function(e){
          e.preventDefault();
          var url = $(this).attr('href');
          var $wrap = $('#myViewDatasContainer');
          var prevH = $wrap.height();
          $wrap.css({ minHeight: prevH }).addClass('loading');
          scrollToBlockTop($wrap);
          $wrap.load(url, function(){
            $wrap.removeClass('loading').css({ minHeight: '' });
            // optional: after load actions
          });
        });

        // visual loading style
        $('#myViewDatasContainer.loading').css({opacity:.6, pointerEvents:'none', transition:'opacity .2s'});
    </script>

    <style>
        #myViewDatasContainer.loading {
            opacity: .6;
            pointer-events: none;
            transition: opacity .2s;
        }
    </style>
}
