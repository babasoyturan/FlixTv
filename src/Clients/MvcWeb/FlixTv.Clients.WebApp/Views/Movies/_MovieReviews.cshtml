@model MovieReviewsPartialViewModel
@using System.Globalization
@using System.Security.Claims
@{
    var isAuth = User?.Identity?.IsAuthenticated == true;
    int? currentUserId = null;
    if (isAuth)
    {
        var s = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        if (int.TryParse(s, out var uid)) currentUserId = uid;
    }
}

<input type="hidden" id="js-reviews-total" value="@Model.TotalCount" />

@functions {
    List<int?> BuildPages(int current, int total)
    {
        var list = new List<int?>();
        if (total <= 1) return list;

        int start = Math.Max(2, current - 2);
        int end = Math.Min(total - 1, current + 2);

        list.Add(1);
        if (start > 2) list.Add(null);
        for (int i = start; i <= end; i++) list.Add(i);
        if (end < total - 1) list.Add(null);
        list.Add(total);

        return list.Distinct().ToList();
    }
}

@{
    var totalPages = Model.TotalPages;
    var current = Math.Min(Math.Max(1, Model.Page), Math.Max(1, totalPages));
    var pages = BuildPages(current, totalPages);

    var shown = Model.Reviews?.Count ?? 0;
    var fromIndex = shown == 0 ? 0 : (Model.Page - 1) * Model.PageSize + 1;
    var toIndex = shown == 0 ? 0 : fromIndex + shown - 1;
}

@if (Model.TotalCount == 0)
{
    <h1 style="color:white">No Reviews</h1>
}
else
{
    <ul class="reviews__list">
        @foreach (var r in Model.Reviews)
        {
            var canDeleteThis = isAuth && currentUserId.HasValue && r.Author?.Id == currentUserId.Value;
            var delStyle = canDeleteThis ? "" : "visibility:hidden";

            <li class="reviews__item" data-review-id="@r.Id">
                <div class="reviews__autor">
                    <img class="reviews__avatar" src="~/img/avatar.svg" alt="">
                    <span class="reviews__name">@r.Title</span>
                    <span class="reviews__time">
                        <time class="js-local-time"
                              datetime="@r.CreatedDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fff'Z'")"
                              data-utc="@(new DateTimeOffset(r.CreatedDate.Kind == DateTimeKind.Utc
                                ? r.CreatedDate
                                : DateTime.SpecifyKind(r.CreatedDate, DateTimeKind.Utc)).ToUnixTimeMilliseconds())">
                            @r.CreatedDate.ToUniversalTime().ToString("dd.MM.yyyy, HH:mm 'UTC'")
                        </time>
                        by @r.Author.Name @r.Author.Surname
                    </span>
                    <span class="reviews__rating">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M22,9.67A1,1,0,0,0,21.14,9l-5.69-.83L12.9,3a1,1,0,0,0-1.8,0L8.55,8.16,2.86,9a1,1,0,0,0-.81.68,1,1,0,0,0,.25,1l4.13,4-1,5.68A1,1,0,0,0,6.9,21.44L12,18.77l5.1,2.67a.93.93,0,0,0,.46.12,1,1,0,0,0,.59-.19,1,1,0,0,0,.4-1l-1-5.68,4.13-4A1,1,0,0,0,22,9.67Z" /></svg>
                        @r.RatingPoint
                    </span>
                </div>
                <p class="reviews__text">@r.Message</p>
                <div class="comments__actions">
                    <div class="main__table-btns">
                        <a href="#modal-delete"
                           class="main__table-btn main__table-btn--delete open-modal js-review-del"
                           data-review-id="@r.Id"
                           style="@delStyle">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,10,18ZM20,6H16V5a3,3,0,0,0-3-3H11A3,3,0,0,0,8,5V6H4A1,1,0,0,0,4,8H5V19a3,3,0,0,0,3,3h8a3,3,0,0,0,3-3V8h1a1,1,0,0,0,0-2ZM10,5a1,1,0,0,1,1-1h2a1,1,0,0,1,1,1V6H10Zm7,14a1,1,0,0,1-1,1H8a1,1,0,0,1-1-1V8H17Zm-3-1a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,14,18Z" /></svg>
                        </a>
                    </div>
                </div>
            </li>

        }
    </ul>

    @if (totalPages > 1)
    {
        <div class="catalog__paginator-wrap catalog__paginator-wrap--comments">
            <span class="catalog__pages">@fromIndex-@toIndex from @Model.TotalCount</span>

            <ul class="catalog__paginator js-reviews-pager">
                <li class="@(current == 1 ? "disabled" : "")">
                    <a href="@Url.Action("MovieReviews", "Movies", new { movieId = Model.MovieId, page = Math.Max(1, current - 1), pageSize = Model.PageSize })">
                        <svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.75 5.36475L13.1992 5.36475" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" /><path d="M5.771 10.1271L0.749878 5.36496L5.771 0.602051" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" /></svg>
                    </a>
                </li>

                @foreach (var p in pages)
                {
                    if (p is null)
                    {
                        <li class="disabled"><span style="color:white">…</span></li>
                    }
                    else
                    {
                        <li class="@(p == current ? "active" : "")">
                            <a href="@Url.Action("MovieReviews", "Movies", new { movieId = Model.MovieId, page = p, pageSize = Model.PageSize })">@p</a>
                        </li>
                    }
                }

                <li class="@(current == totalPages ? "disabled" : "")">
                    <a href="@Url.Action("MovieReviews", "Movies", new { movieId = Model.MovieId, page = Math.Min(totalPages, current + 1), pageSize = Model.PageSize })">
                        <svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.1992 5.3645L0.75 5.3645" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" /><path d="M8.17822 0.602051L13.1993 5.36417L8.17822 10.1271" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round" /></svg>
                    </a>
                </li>
            </ul>
        </div>
    }
}

<style>
    /* optional: reuse comments loading style */
</style>